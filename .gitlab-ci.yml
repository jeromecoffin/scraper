stages:
  - build
  - test
  - deploy

include:
  - variables/variables.yml
  - variables/gucci.yml
  - variables/vuitton.yml

before_script:
  - docker info

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - echo "$TOKEN" | docker login -u "$USERNAME" --password-stdin $DOCKER_REGISTRY
    - docker build -t $DOCKER_REGISTRY/scraper8502721/$IMAGE_NAME:$CI_COMMIT_REF_NAME .
    - docker push $DOCKER_REGISTRY/scraper8502721/$IMAGE_NAME:$CI_COMMIT_REF_NAME

test_vuitton:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  script:
    - echo "$TOKEN" | docker login -u "$USERNAME" --password-stdin $DOCKER_REGISTRY
    - docker run --pull=always --name ${VUITTON_CONTAINER_NAME} -e CONTAINER_NAME=${VUITTON_CONTAINER_NAME} -e BASE_URL=${VUITTON_BASE_URL} -e COOKIES_XPATH="${VUITTON_COOKIES_XPATH}" -e PRICE_XPATH="${VUITTON_PRICE_XPATH}" -e NUM_LINES_TO_READ=${VUITTON_NUM_LINES_TO_READ} -e LIST_REFERENCES=${VUITTON_LIST_REFERENCES} registry.gitlab.com/scraper8502721/$IMAGE_NAME:$CI_COMMIT_REF_NAME
  when: manual

test_gucci:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  script:
    - echo "$TOKEN" | docker login -u "$USERNAME" --password-stdin $DOCKER_REGISTRY
    - docker run --pull=always --name ${GUCCI_CONTAINER_NAME} -e CONTAINER_NAME=${GUCCI_CONTAINER_NAME} -e BASE_URL=${GUCCI_BASE_URL} -e COOKIES_XPATH="${GUCCI_COOKIES_XPATH}" -e PRICE_XPATH="${GUCCI_PRICE_XPATH}" -e NUM_LINES_TO_READ=${GUCCI_NUM_LINES_TO_READ} -e LIST_REFERENCES=${GUCCI_LIST_REFERENCES} registry.gitlab.com/scraper8502721/$IMAGE_NAME:$CI_COMMIT_REF_NAME
  when: manual

deploy:
  stage: deploy
  script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $DEPLOY_SERVER >> ~/.ssh/known_hosts
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "docker info"
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "docker pull $DOCKER_REGISTRY/scrapper1641804/$IMAGE_NAME:$CI_COMMIT_REF_NAME"
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "docker stop scraper_container || true"
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "docker rm scraper_container || true"
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "docker run -d --name scraper_container -v $DEPLOY_PATH/data:/app/data $DOCKER_REGISTRY/scrapper1641804/$IMAGE_NAME:$CI_COMMIT_REF_NAME"
  only:
    - master